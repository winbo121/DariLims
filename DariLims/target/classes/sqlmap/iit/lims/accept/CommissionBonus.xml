<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="commissionBonus">

	<!-- 수수료성과급 목록 조회 -->
	<select id="selectCommissionBonusList" parameterType="CommissionCheckVO" resultType="CommissionCheckVO">
        SELECT A.TEST_REQ_NO, 
	       A.TEST_REQ_SEQ, 
	       A.TITLE,
		   TO_CHAR(A.REPORT_LAST_DATE, 'YYYY-MM-DD') AS LAST_REPORT_DATE,
	       S1.PRDLST_NM,
	       DECODE(A.EXPRESS_FLAG,'Y','특급','일반') AS EXPRESS_FLAG, 
	       TO_CHAR(TO_DATE(A.SAMPLE_ARRIVAL_DATE,'YYYYMMDD'),'YYYY-MM-DD') AS SAMPLE_ARRIVAL_DATE, 
	       (SELECT SIMPLE_PRC_NM 
	         FROM PROCESS 
	        WHERE PRC_CD = A.STATE
	       ) AS STATE, 
	       (SELECT SD.CODE_NAME FROM COMMON_CODE_DETAIL SD WHERE SD.CODE = A.REQ_CLASS) AS REQ_CLASS,
	       RO2.ORG_NM AS TAX_REQ_ORG_NM, 
	       RO2.BIZ_NO1 || '-' || RO2.BIZ_NO2 || '-' || RO2.BIZ_NO3 AS TAX_BIZ_NO,
	       RO.ORG_NM, 
	       S1.COMMISSION_AMT_DET, 
	       S1.PRDLST_FEE, 
	       S1.DEPT_FEE, 
	       CASE 
	           WHEN A.EXPRESS_FLAG='Y' 
	           THEN (S1.COMMISSION_AMT_DET * 0.25) 
	           ELSE (S1.COMMISSION_AMT_DET - (DECODE(S1.PRDLST_FEE, 0, S1.DEPT_FEE, S1.PRDLST_FEE)/2))/2 
	       END AS BONUS_FEE, 
	       DECODE(OCD.TAX_INVOICE_FLAG,'Y','발행','미발행') AS TAX_INVOICE_FLAG, 
	       TO_CHAR(TO_DATE(OCD.TAX_INVOICE_DATE, 'YYYYMMDD'), 'YYYY-MM-DD') AS TAX_INVOICE_DATE, 
	       (SELECT SB.DEPT_NM FROM DEPART SB WHERE SB.DEPT_CD = A.SALES_DEPT_CD) AS SALES_DEPT_CD, 
	       (SELECT SC.USER_NM FROM USER_INFO SC WHERE SC.USER_ID = A.SALES_USER_ID) AS SALES_USER_ID, 
	       S1.ITEM_CNT,
	       (
		       SELECT SUM( NVL( NVL2( SA.DISCOUNT_RATE, SA.FEE_TOT - 
				       ( 
				           CASE 
				               WHEN SA.DISCOUNT_FLAG = 'Y' 
				               THEN SA.FEE_TOT * (SA.DISCOUNT_RATE * 0.01) 
				               ELSE 0 
				           END 
				       ) 
				       , SA.FEE_TOT ) - NVL(OCD.DEPOSIT_AMT,0),0)) AS DEFAULT_AMT_TOT 
				FROM TEST_REQ SA
				INNER JOIN ORG_COMMISSION_DEPOSIT OCD ON SA.TEST_REQ_SEQ = OCD.TEST_REQ_SEQ
				WHERE OCD.TEST_REQ_SEQ = A.TEST_REQ_SEQ
	       ) AS DEFAULT_AMT_TOT,
	       CCD.CODE_NAME AS PAYMENT_METHOD
	   FROM TEST_REQ A 
	   INNER JOIN REQ_ORG RO ON RO.REQ_ORG_NO = A.REQ_ORG_NO
	   INNER JOIN REQ_ORG RO2 ON RO2.REQ_ORG_NO = A.REQ_ORG_NO3 
	   INNER JOIN ORG_COMMISSION_DEPOSIT OCD ON OCD.REQ_ORG_NO = A.REQ_ORG_NO AND OCD.TEST_REQ_SEQ = A.TEST_REQ_SEQ
	   LEFT JOIN COMMON_CODE_DETAIL CCD ON OCD.PAYMENT_METHOD = CCD.CODE 
        INNER JOIN (
            SELECT A.TEST_REQ_SEQ, 
	       		CASE WHEN COUNT(DISTINCT S.TEST_SAMPLE_SEQ) = 1 THEN
							MAX(PC.KOR_NM)
	          ELSE
	       				MAX(PC.KOR_NM) || ' 외 ' || TO_CHAR(COUNT(DISTINCT S.TEST_SAMPLE_SEQ)-1) || ' 건'
	          END AS PRDLST_NM,
	              SUM(1) AS ITEM_CNT, 
	              SUM(NVL(I.FEE,0)) AS COMMISSION_AMT_DET, 
	              SUM(NVL(I.PRDLST_FEE,0)) AS PRDLST_FEE, 
	              SUM(NVL(I.DEPT_FEE,0)) AS DEPT_FEE
	         FROM TEST_REQ A 
	          INNER JOIN TEST_SAMPLE_ITEM I ON A.TEST_REQ_SEQ = I.TEST_REQ_SEQ
	          INNER JOIN TEST_SAMPLE S ON A.TEST_REQ_SEQ = S.TEST_REQ_SEQ
	          INNER JOIN PRDLST_CL PC ON S.PRDLST_CD = PC.PRDLST_CD 
            WHERE 1=1
			<if test="req_class != null and req_class != '' ">
				AND A.REQ_CLASS = #{req_class}
			</if>
			<if test="dept_cd != null and dept_cd != '' ">
				AND I.DEPT_CD = #{dept_cd}
			</if>
			<if test="sales_dept_cd != null and sales_dept_cd != '' ">
				AND A.SALES_DEPT_CD = #{sales_dept_cd}
			</if>
			<if test="sales_user_id != null and sales_user_id != '' ">
				AND A.SALES_USER_ID = #{sales_user_id}
			</if>
			<if test="test_req_no != null and test_req_no != ''">
				AND UPPER(A.TEST_REQ_NO) LIKE '%' || UPPER(#{test_req_no}) || '%'
			</if>
			<if test="state != null and state != ''">
				AND A.STATE = #{state}
			</if>			
			<if test="startDate != null and startDate != ''">
				<if test="endDate != null and endDate != ''">
					AND TO_CHAR(TO_DATE(A.SAMPLE_ARRIVAL_DATE, 'YYYYMMDD'), 'YYYY-MM-DD') BETWEEN #{startDate} AND #{endDate}
				</if>
			</if>
            GROUP BY A.TEST_REQ_SEQ
    	) S1 ON A.TEST_REQ_SEQ = S1.TEST_REQ_SEQ
    	WHERE 1=1
		<if test="tax_invoice_flag != null and tax_invoice_flag != ''">
			AND OCD.TAX_INVOICE_FLAG = #{tax_invoice_flag}
		</if>
		<if test="taxSdate != null and taxSdate != ''">
			<if test="taxEdate != null and taxEdate != ''">
				AND TO_CHAR(TO_DATE(OCD.TAX_INVOICE_DATE, 'YYYYMMDD'), 'YYYY-MM-DD') BETWEEN #{taxSdate} AND #{taxEdate}
			</if>
		</if>
		<!-- 업체조회 -->
		<if test="org_nm != null and org_nm != ''">
			<if test="org_cls == 'TAX'">
				AND RO2.ORG_NM LIKE '%' || #{org_nm} || '%'
			</if>
			<if test="org_cls == 'REQ'">
				AND RO.ORG_NM LIKE '%' || #{org_nm} || '%'
			</if>
		</if>
		<if test="sortName != null and sortName != '' ">
			ORDER BY ${sortName} ${sortType}
		</if>
		<if test="sortName == null or sortName == '' ">
			ORDER BY A.TEST_REQ_SEQ DESC
		</if>
	</select>

</mapper>